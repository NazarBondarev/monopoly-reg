from aiogram import executor, exceptions, Dispatcher, Bot, types
import asyncio
from config import API_TOKEN
from keyboards import general_menu, Keyboards

bot = Bot(API_TOKEN, parse_mode="HTML")
dp = Dispatcher(bot)


@dp.message_handler(commands = 'start')
async def start(message: types.Message):
    await message.answer(f"‚úã–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, <b>{message.from_user.first_name}!</b>\n"
                         f"ü§ñ–Ø –±–æ—Ç –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ –∏–≥—Ä–µ <b>¬´–ú–æ–Ω–æ–ø–æ–ª–∏—è¬ª</b>\n\n"
                         f"‚¨áÔ∏è–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é –Ω–∏–∂–µ –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ –±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å", reply_markup=general_menu)


@dp.message_handler(lambda message: message.text == "üí¨–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã")
async def view_rules(message: types.Message):
    await message.answer("–ó–¥–µ—Å—å –ª–∏–±–æ —Ç–µ–∫—Å—Ç —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –ª–∏–±–æ —Å—Å—ã–ª–∫–∞ –Ω–∞ —Å—Ç–∞—Ç—å—é telega.ph")

@dp.message_handler(lambda message: message.text == "üìÜ–î–∞—Ç—ã –∏–≥—Ä")
async def view_dates(message: types.Message):
    keyb = Keyboards().get_dates_keyb()
    if keyb:
        await message.answer("üóí<b>–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏–≥—Ä</b>\n\nüí°<em>–ß–∏—Å–ª–æ –≤ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã—Ö —Å–∫–æ–±–∫–∞—Ö –æ–±–æ–∑–Ω–∞—á–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–µ—Å—Ç</em>", reply_markup=keyb)
    else:
        await message.answer("–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏–≥—Ä –Ω–µ—Ç!")
    
@dp.message_handler(lambda message: message.text == "üåü–ú–æ–∏ –∏–≥—Ä—ã")
async def view_games(message: types.Message):
    await message.answer("–°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –∏–≥—Ä –ø—É—Å—Ç")



@dp.callback_query_handler(lambda call: call.data.startswith("date_"))
async def select_date(call: types.CallbackQuery):
    


if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)